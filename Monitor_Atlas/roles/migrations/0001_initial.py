# Generated by Django 5.2.4 on 2025-08-26 17:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('chirpstack', '0001_initial'),
        ('infrastructure', '0001_initial'),
        ('organizations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('color', models.CharField(default='#bfbfbf', max_length=20)),
                ('is_admin', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='WorkspaceMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PermissionKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=50, null=True)),
                ('scope', models.CharField(choices=[('device', 'Device'), ('machine', 'Machine'), ('application', 'Application'), ('user', 'User'), ('role', 'Role'), ('workspace', 'Workspace'), ('tenant', 'Tenant'), ('location', 'Location'), ('gateway', 'Gateway'), ('device_profile', 'DeviceProfile'), ('device_profile_template', 'DeviceProfileTemplate'), ('api_user', 'ApiUser'), ('type', 'Type'), ('subscription', 'Subscription')], max_length=30)),
                ('key_type', models.CharField(choices=[('get', 'Get'), ('get_by_id', 'Get By ID'), ('put', 'Put'), ('post', 'Post'), ('delete', 'Delete')], max_length=30)),
                ('api_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='chirpstack.apiuser')),
                ('application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='infrastructure.application')),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='infrastructure.device')),
                ('device_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='chirpstack.deviceprofile')),
                ('device_profile_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='chirpstack.deviceprofiletemplate')),
                ('gateway', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='infrastructure.gateway')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='infrastructure.location')),
                ('machine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='infrastructure.machine')),
                ('subscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='organizations.subscription')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='organizations.tenant')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='infrastructure.type')),
            ],
        ),
    ]
